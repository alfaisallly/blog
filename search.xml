<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2Fblog%2Fundefined%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
      <categories>
        <category>web</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[what is machine learning]]></title>
    <url>%2Fblog%2Fundefined%2Fwhat-is-machine-learning%2F</url>
    <content type="text"><![CDATA[artificial intelligence artificial =Machine LearningData Mining Machine Learning =Pattern RecognitionNeural NetworkDeep Learning what is Machine LearningFailure is the mother of success. Step to make Machine Learning1.First build the matimatical model.2.sove weights based on these data. Mashine Learning is based on data learning. costfunktionlet costfunktion $ \to 0 $ then we will find the answer.]]></content>
      <categories>
        <category>machine learning</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Mac Log]]></title>
    <url>%2Fblog%2Fundefined%2FMac-Log%2F</url>
    <content type="text"><![CDATA[1pip Python 安装jupyterpython3 -m pip install jupyter 2018 10 30卸载时用pip uninstall jupyter conda create -n env_name python=2.7 新建环境macsource activate env_name 进入环境windowsactivate env_name 微软进入环境 pip install ipykernelpython -m ipykernel install –name py27wanmen 安装ipykernel,取一个名子py27wanmen windows user 在p27中要退出deactivate mac user 在p27中要退出source deactivate 查看已有的kernel jupyter kernelspece list]]></content>
      <categories>
        <category>Maclog</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[knowledge point of the papger topic]]></title>
    <url>%2Fblog%2Fundefined%2Fknowledge-point-of-the-papger-topic%2F</url>
    <content type="text"><![CDATA[协方差矩阵$$ x = \begin{bmatrix} X_1 \\ X_2 \\ X_2 \\ \vdots \\ X_n \end{bmatrix} $$协方差的第（i,j）项是 $$ \sum_{ij}=cov(X_i,X_j) $$协方差矩阵为$$ \sum= E\begin{bmatrix} (X-E[X])(X-E[X])^T \end{bmatrix} $$1 协方差矩阵具有对称，半正定属性。2 协方差属于半正定对称矩阵的黎曼流形。3 黎曼几何数学工具！基于黎曼距离来表示 数据处理1 根据样本数据，表示为一个协方差矩阵流形序列2 存在很多方差矩阵，根据很多方差矩阵求平均方差矩阵（参考协方差矩阵） 黎曼距离计算1 超出上下界线？是 则为有故障，否 则运行正常 自适应的方式估计参考矩阵我们研究的是通过自适应的方式估计参考矩阵吗？ 黎曼几何黎曼度量的光滑流形，即流形切空间上二次形式的选择。它特别关注于角度，弧线长度及体积，把每个微小部分加起来而得到的整体的数量。黎曼几何理论：1.紧致二维黎曼流形上高斯曲率的积分等 $ i2\pi x $ 相空间重构一维时间序列反向构造出原系统的相空间结构，相空间的关键是风俗入维数m 和延迟时间$ \tau $问题：m和$ \tau $ 怎么确定？]]></content>
      <categories>
        <category>Masterarbeit</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Zeitdiskrete Darstellung von LTI-Modellen]]></title>
    <url>%2Fblog%2Fundefined%2FZeitdiskrete-Darstellung-von-LTI-Modellen%2F</url>
    <content type="text"><![CDATA[Die Matlab-Befehle1234systf syszpk sysss sysf rd= tf(num,den,Ts) = zpk(z,p,k,Ts)= ss(a,b,c,d,Ts)= frd (ant,f req,Ts) Eine zeitdiskrete Uebertragungsfunktionz.B.$ h_{TF}=\frac{z-0.5}{z^2+z-2}=h_{ZPK}=\frac{z-0.5}{(z+2)(z-1)} $12345678Befehl:tf(num,den,Ts)Befehl:zpk(z,p,k,Ts)h=tf([1 -0.5],[1 1 -2],0.01) ;h=zpk(0.5,[-2,1],1,0.01); Rationale Funktion in z123456z = tf(&apos;z&apos;,0.01);g= (z-0.05)/(z^2+z-2);orz=zpk(&apos;z&apos;,0.01);g= (z-0.05)/((z+2)*(z-1)) Matlab Zeigen&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt; discretelernhtml,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,font,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,b,u,i,center,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td{margin:0;padding:0;border:0;outline:0;font-size:100%;vertical-align:baseline;background:transparent}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:before,blockquote:after,q:before,q:after{content:’’;content:none}:focus{outine:0}ins{text-decoration:none}del{text-decoration:line-through}table{border-collapse:collapse;border-spacing:0} html { min-height:100%; margin-bottom:1px; }html body { height:100%; margin:0px; font-family:Arial, Helvetica, sans-serif; font-size:10px; color:#000; line-height:140%; background:#fff none; overflow-y:scroll; }html body td { vertical-align:top; text-align:left; } h1 { padding:0px; margin:0px 0px 25px; font-family:Arial, Helvetica, sans-serif; font-size:1.5em; color:#d55000; line-height:100%; font-weight:normal; }h2 { padding:0px; margin:0px 0px 8px; font-family:Arial, Helvetica, sans-serif; font-size:1.2em; color:#000; font-weight:bold; line-height:140%; border-bottom:1px solid #d6d4d4; display:block; }h3 { padding:0px; margin:0px 0px 5px; font-family:Arial, Helvetica, sans-serif; font-size:1.1em; color:#000; font-weight:bold; line-height:140%; } a { color:#005fce; text-decoration:none; }a:hover { color:#005fce; text-decoration:underline; }a:visited { color:#004aa0; text-decoration:none; } p { padding:0px; margin:0px 0px 20px; }img { padding:0px; margin:0px 0px 20px; border:none; }p img, pre img, tt img, li img, h1 img, h2 img { margin-bottom:0px; } ul { padding:0px; margin:0px 0px 20px 23px; list-style:square; }ul li { padding:0px; margin:0px 0px 7px 0px; }ul li ul { padding:5px 0px 0px; margin:0px 0px 7px 23px; }ul li ol li { list-style:decimal; }ol { padding:0px; margin:0px 0px 20px 0px; list-style:decimal; }ol li { padding:0px; margin:0px 0px 7px 23px; list-style-type:decimal; }ol li ol { padding:5px 0px 0px; margin:0px 0px 7px 0px; }ol li ol li { list-style-type:lower-alpha; }ol li ul { padding-top:7px; }ol li ul li { list-style:square; } .content { font-size:1.2em; line-height:140%; padding: 20px; } pre, code { font-size:12px; }tt { font-size: 1.2em; }pre { margin:0px 0px 20px; }pre.codeinput { padding:10px; border:1px solid #d3d3d3; background:#f7f7f7; }pre.codeoutput { padding:10px 11px; margin:0px 0px 20px; color:#4c4c4c; }pre.error { color:red; } @media print { pre.codeinput, pre.codeoutput { word-wrap:break-word; width:100%; } } span.keyword { color:#0000FF }span.comment { color:#228B22 }span.string { color:#A020F0 }span.untermstring { color:#B20000 }span.syscmd { color:#B28C00 } .footer { width:auto; padding:10px 0px; margin:25px 0px 0px; border-top:1px dotted #878787; font-size:0.8em; line-height:140%; font-style:italic; color:#878787; text-align:left; float:none; }.footer p { margin:0px; }.footer a { color:#878787; }.footer a:hover { color:#878787; text-decoration:underline; }.footer a:visited { color:#878787; } table th { padding:7px 5px; text-align:left; vertical-align:middle; border: 1px solid #d6d4d4; font-weight:bold; }table td { padding:7px 5px; text-align:left; vertical-align:top; border:1px solid #d6d4d4; } ContentsnormalRationale Funktionnormalh=tf([1 -0.5],[1 1 -2],0.01)h=zpk(0.5,[-2,1],1,0.01)h = z - 0.5 z^2 + z - 2 Sample time: 0.01 secondsDiscrete-time transfer function. h = (z-0.5) (z+2) (z-1) Sample time: 0.01 secondsDiscrete-time zero/pole/gain model. Rationale Funktionz = tf(‘z’,0.01)g= (z-0.05)/(z^2+z-2) z=zpk(‘z’,0.01);g= (z-0.05)/((z+2)*(z-1)) Sample time: 0.01 secondsDiscrete-time transfer function. g = z - 0.05 z^2 + z - 2 Sample time: 0.01 secondsDiscrete-time transfer function. g = (z-0.05) (z+2) (z-1) Sample time: 0.01 secondsDiscrete-time zero/pole/gain model.]]></content>
      <categories>
        <category>Matlab simulation</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[state space]]></title>
    <url>%2Fblog%2Fundefined%2Fstate-space%2F</url>
    <content type="text"><![CDATA[Multiple-Input/Multiple-OutputZustands-DGL:$ \dot{x} = Ax+Bu $$ y = Cx+Du $ Im haeufig auftretenden Fall eines Single-Input/Single-Output-Systems$ \dot{x}=Ax+bu $$ y = c^Tx+du $ Befehl ss(A,B,C,D) SShtml,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,font,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,b,u,i,center,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td{margin:0;padding:0;border:0;outline:0;font-size:100%;vertical-align:baseline;background:transparent}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:before,blockquote:after,q:before,q:after{content:’’;content:none}:focus{outine:0}ins{text-decoration:none}del{text-decoration:line-through}table{border-collapse:collapse;border-spacing:0}html { min-height:100%; margin-bottom:1px; }html body { height:100%; margin:0px; font-family:Arial, Helvetica, sans-serif; font-size:10px; color:#000; line-height:140%; background:#fff none; overflow-y:scroll; }html body td { vertical-align:top; text-align:left; }h1 { padding:0px; margin:0px 0px 25px; font-family:Arial, Helvetica, sans-serif; font-size:1.5em; color:#d55000; line-height:100%; font-weight:normal; }h2 { padding:0px; margin:0px 0px 8px; font-family:Arial, Helvetica, sans-serif; font-size:1.2em; color:#000; font-weight:bold; line-height:140%; border-bottom:1px solid #d6d4d4; display:block; }h3 { padding:0px; margin:0px 0px 5px; font-family:Arial, Helvetica, sans-serif; font-size:1.1em; color:#000; font-weight:bold; line-height:140%; }a { color:#005fce; text-decoration:none; }a:hover { color:#005fce; text-decoration:underline; }a:visited { color:#004aa0; text-decoration:none; }p { padding:0px; margin:0px 0px 20px; }img { padding:0px; margin:0px 0px 20px; border:none; }p img, pre img, tt img, li img, h1 img, h2 img { margin-bottom:0px; }ul { padding:0px; margin:0px 0px 20px 23px; list-style:square; }ul li { padding:0px; margin:0px 0px 7px 0px; }ul li ul { padding:5px 0px 0px; margin:0px 0px 7px 23px; }ul li ol li { list-style:decimal; }ol { padding:0px; margin:0px 0px 20px 0px; list-style:decimal; }ol li { padding:0px; margin:0px 0px 7px 23px; list-style-type:decimal; }ol li ol { padding:5px 0px 0px; margin:0px 0px 7px 0px; }ol li ol li { list-style-type:lower-alpha; }ol li ul { padding-top:7px; }ol li ul li { list-style:square; }.content { font-size:1.2em; line-height:140%; padding: 20px; }pre, code { font-size:12px; }tt { font-size: 1.2em; }pre { margin:0px 0px 20px; }pre.codeinput { padding:10px; border:1px solid #d3d3d3; background:#f7f7f7; }pre.codeoutput { padding:10px 11px; margin:0px 0px 20px; color:#4c4c4c; }pre.error { color:red; }@media print { pre.codeinput, pre.codeoutput { word-wrap:break-word; width:100%; } }span.keyword { color:#0000FF }span.comment { color:#228B22 }span.string { color:#A020F0 }span.untermstring { color:#B20000 }span.syscmd { color:#B28C00 }.footer { width:auto; padding:10px 0px; margin:25px 0px 0px; border-top:1px dotted #878787; font-size:0.8em; line-height:140%; font-style:italic; color:#878787; text-align:left; float:none; }.footer p { margin:0px; }.footer a { color:#878787; }.footer a:hover { color:#878787; text-decoration:underline; }.footer a:visited { color:#878787; }table th { padding:7px 5px; text-align:left; vertical-align:middle; border: 1px solid #d6d4d4; font-weight:bold; }table td { padding:7px 5px; text-align:left; vertical-align:top; border:1px solid #d6d4d4; } ss([1 2;1 3],[1 2 3;1 3 2],[1 2;2 1;3 2],[0 0 0;0 0 0;0 0 0])ans = A = x1 x2 x1 1 2 x2 1 3 B = u1 u2 u3 x1 1 2 3 x2 1 3 2 C = x1 x2 y1 1 2 y2 2 1 y3 3 2 D = u1 u2 u3 y1 0 0 0 y2 0 0 0 y3 0 0 0Continuous-time state-space model.]]></content>
      <categories>
        <category>Matlab simulation</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Frequency Response]]></title>
    <url>%2Fblog%2Fundefined%2FFrequency-Response%2F</url>
    <content type="text"><![CDATA[Erstellen von FRD-SISO-Modellen$ F =\frac{1}{1+jwT}=\frac{1-jwT}{1+{wT}^2}=\frac{1}{\sqrt{1+{wT}^2}} $ In Matlab eingeben Frequenzhtml,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,font,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,b,u,i,center,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td{margin:0;padding:0;border:0;outline:0;font-size:100%;vertical-align:baseline;background:transparent}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:before,blockquote:after,q:before,q:after{content:’’;content:none}:focus{outine:0}ins{text-decoration:none}del{text-decoration:line-through}table{border-collapse:collapse;border-spacing:0}html { min-height:100%; margin-bottom:1px; }html body { height:100%; margin:0px; font-family:Arial, Helvetica, sans-serif; font-size:10px; color:#000; line-height:140%; background:#fff none; overflow-y:scroll; }html body td { vertical-align:top; text-align:left; }h1 { padding:0px; margin:0px 0px 25px; font-family:Arial, Helvetica, sans-serif; font-size:1.5em; color:#d55000; line-height:100%; font-weight:normal; }h2 { padding:0px; margin:0px 0px 8px; font-family:Arial, Helvetica, sans-serif; font-size:1.2em; color:#000; font-weight:bold; line-height:140%; border-bottom:1px solid #d6d4d4; display:block; }h3 { padding:0px; margin:0px 0px 5px; font-family:Arial, Helvetica, sans-serif; font-size:1.1em; color:#000; font-weight:bold; line-height:140%; }a { color:#005fce; text-decoration:none; }a:hover { color:#005fce; text-decoration:underline; }a:visited { color:#004aa0; text-decoration:none; }p { padding:0px; margin:0px 0px 20px; }img { padding:0px; margin:0px 0px 20px; border:none; }p img, pre img, tt img, li img, h1 img, h2 img { margin-bottom:0px; }ul { padding:0px; margin:0px 0px 20px 23px; list-style:square; }ul li { padding:0px; margin:0px 0px 7px 0px; }ul li ul { padding:5px 0px 0px; margin:0px 0px 7px 23px; }ul li ol li { list-style:decimal; }ol { padding:0px; margin:0px 0px 20px 0px; list-style:decimal; }ol li { padding:0px; margin:0px 0px 7px 23px; list-style-type:decimal; }ol li ol { padding:5px 0px 0px; margin:0px 0px 7px 0px; }ol li ol li { list-style-type:lower-alpha; }ol li ul { padding-top:7px; }ol li ul li { list-style:square; }.content { font-size:1.2em; line-height:140%; padding: 20px; }pre, code { font-size:12px; }tt { font-size: 1.2em; }pre { margin:0px 0px 20px; }pre.codeinput { padding:10px; border:1px solid #d3d3d3; background:#f7f7f7; }pre.codeoutput { padding:10px 11px; margin:0px 0px 20px; color:#4c4c4c; }pre.error { color:red; }@media print { pre.codeinput, pre.codeoutput { word-wrap:break-word; width:100%; } }span.keyword { color:#0000FF }span.comment { color:#228B22 }span.string { color:#A020F0 }span.untermstring { color:#B20000 }span.syscmd { color:#B28C00 }.footer { width:auto; padding:10px 0px; margin:25px 0px 0px; border-top:1px dotted #878787; font-size:0.8em; line-height:140%; font-style:italic; color:#878787; text-align:left; float:none; }.footer p { margin:0px; }.footer a { color:#878787; }.footer a:hover { color:#878787; text-decoration:underline; }.footer a:visited { color:#878787; }table th { padding:7px 5px; text-align:left; vertical-align:middle; border: 1px solid #d6d4d4; font-weight:bold; }table td { padding:7px 5px; text-align:left; vertical-align:top; border:1px solid #d6d4d4; } Frequenzfreq = [0.01 0.1 1 10 100 1000 10000] ; %frequenzpunkteant = (1-jfreq)./(1-jfreq.^2) ; %PT1erzeugensysfrd = frd(ant,freq,‘units’,‘rad/s’)sysfrd = Frequency(rad/s) Response —————- ——– 0.0100 1.000e+00 - 9.900e-03i 0.1000 1.001e+00 - 8.999e-02i 1.0000 1.000e+00 + 0.000e+00i 10.0000 1.001e-01 + 8.999e-03i 100.0000 1.000e-02 + 9.900e-05i 1000.0000 1.000e-03 + 9.990e-07i 10000.0000 1.000e-04 + 9.999e-09iContinuous-time frequency response.]]></content>
      <categories>
        <category>Matlab simulation</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[zero and pole gain]]></title>
    <url>%2Fblog%2Fundefined%2Fzero-and-pole-gain%2F</url>
    <content type="text"><![CDATA[Nullstellen Polstellen Darstellungdie Nullstellen Polstellen Darstellung kann beschreibt Das Uebertragungsverhalten.$$ G(s) = k\frac{(s-z_1) \dots (s-z_{m-1})(s-z_m)}{(s-p_1) \dots (s-p_{n-1})(s-p_n)} $$hier ist k ein Verstaerkungsfaktor.z_1 bis z_m sind Nullstellen.p_1 bis p_n sind Polstellen. Befehl zpk(z,p,k) z bedeutet zero p bedeutet poleIn matlab wir koennen einfach eingeben.ZB. h = zpk([1 2 3],[1 5 6],2); Rationale Funktion in szuesert wir sollen s definieren.‘ &gt;&gt; s = zpk(‘s’);’dann direct rationale Funktion is s ein geben.‘ &gt;&gt; h = 21/(s-1)(s+2);’]]></content>
      <categories>
        <category>Matlab simulation</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[zpk-mimo-Modellen]]></title>
    <url>%2Fblog%2Fundefined%2Fzpk-mimo-Modellen%2F</url>
    <content type="text"><![CDATA[MIMO Modelle$$ G(s) = \begin{pmatrix} h_{11} &amp; h_{12} \\ h_{21} &amp; h{22} \end{pmatrix} $$ Eingabe in Matlab erfolgt auf die zwei Arten:1.definieren der einzelnen zpk-siso-modelle mit zpkh11 = zpk(z1,p1,k1) ;h12 = zpk(z2,p2,k2) ;h21 = zpk(z3,p3,k3) ;h22 = zpk(z4,p4,k4) ;G = [h11 h12;h21 h22];2.rationale Funktionen is s:s = zpk(‘s’);h11 = 21/((s-1)(s+2));h12 = 2(s-4)/((s-1)(s+2));h21 = 3(s-5)/((s-7)(s-5));h22 = 4(s-1)(s-2)(s-3)/((s-3)s(4.5));G = [h11 h12;h21 h22];3.Definieren von zwei Cell Arrays$$ Z = \begin{pmatrix} z_{11} &amp; z_{12} \\ z_{21} &amp; z_{22} \end{pmatrix} $$$$ P = \begin{pmatrix} p_{11} &amp; p_{12} \\ p_{21} &amp; p_{22} \end{pmatrix} $$$$ K = \begin{pmatrix} k_{11} &amp; k_{12} \\ k_{21} &amp; k_{22} \end{pmatrix} $$Aufruf von zpk mit den Parametern Z,P und K.$$ &gt;&gt; G= zpk(Z,P,K) ; Matlab Zeigenclick Matlab Zeigen ZPK MIMO Modellhtml,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,font,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,b,u,i,center,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td{margin:0;padding:0;border:0;outline:0;font-size:100%;vertical-align:baseline;background:transparent}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:before,blockquote:after,q:before,q:after{content:’’;content:none}:focus{outine:0}ins{text-decoration:none}del{text-decoration:line-through}table{border-collapse:collapse;border-spacing:0} html { min-height:100%; margin-bottom:1px; }html body { height:100%; margin:0px; font-family:Arial, Helvetica, sans-serif; font-size:10px; color:#000; line-height:140%; background:#fff none; overflow-y:scroll; }html body td { vertical-align:top; text-align:left; } h1 { padding:0px; margin:0px 0px 25px; font-family:Arial, Helvetica, sans-serif; font-size:1.5em; color:#d55000; line-height:100%; font-weight:normal; }h2 { padding:0px; margin:0px 0px 8px; font-family:Arial, Helvetica, sans-serif; font-size:1.2em; color:#000; font-weight:bold; line-height:140%; border-bottom:1px solid #d6d4d4; display:block; }h3 { padding:0px; margin:0px 0px 5px; font-family:Arial, Helvetica, sans-serif; font-size:1.1em; color:#000; font-weight:bold; line-height:140%; } a { color:#005fce; text-decoration:none; }a:hover { color:#005fce; text-decoration:underline; }a:visited { color:#004aa0; text-decoration:none; } p { padding:0px; margin:0px 0px 20px; }img { padding:0px; margin:0px 0px 20px; border:none; }p img, pre img, tt img, li img, h1 img, h2 img { margin-bottom:0px; } ul { padding:0px; margin:0px 0px 20px 23px; list-style:square; }ul li { padding:0px; margin:0px 0px 7px 0px; }ul li ul { padding:5px 0px 0px; margin:0px 0px 7px 23px; }ul li ol li { list-style:decimal; }ol { padding:0px; margin:0px 0px 20px 0px; list-style:decimal; }ol li { padding:0px; margin:0px 0px 7px 23px; list-style-type:decimal; }ol li ol { padding:5px 0px 0px; margin:0px 0px 7px 0px; }ol li ol li { list-style-type:lower-alpha; }ol li ul { padding-top:7px; }ol li ul li { list-style:square; } .content { font-size:1.2em; line-height:140%; padding: 20px; } pre, code { font-size:12px; }tt { font-size: 1.2em; }pre { margin:0px 0px 20px; }pre.codeinput { padding:10px; border:1px solid #d3d3d3; background:#f7f7f7; }pre.codeoutput { padding:10px 11px; margin:0px 0px 20px; color:#4c4c4c; }pre.error { color:red; } @media print { pre.codeinput, pre.codeoutput { word-wrap:break-word; width:100%; } } span.keyword { color:#0000FF }span.comment { color:#228B22 }span.string { color:#A020F0 }span.untermstring { color:#B20000 }span.syscmd { color:#B28C00 } .footer { width:auto; padding:10px 0px; margin:25px 0px 0px; border-top:1px dotted #878787; font-size:0.8em; line-height:140%; font-style:italic; color:#878787; text-align:left; float:none; }.footer p { margin:0px; }.footer a { color:#878787; }.footer a:hover { color:#878787; text-decoration:underline; }.footer a:visited { color:#878787; } table th { padding:7px 5px; text-align:left; vertical-align:middle; border: 1px solid #d6d4d4; font-weight:bold; }table td { padding:7px 5px; text-align:left; vertical-align:top; border:1px solid #d6d4d4; } ZPK MIMO Modell%erstens Verfahren%name:zhongchengh11 = zpk([1 2 5],[1 3 2],1) ;h12 = zpk([2 3 6],[5 4],2) ;h21 = zpk([2.1 3],[0 1],4) ;h22 = zpk([4 7],[1 6],2) ;H =[h11 h12 ; h21 h22]H = From input 1 to output… (s-1) (s-2) (s-5) 1: —————– (s-1) (s-2) (s-3) 4 (s-2.1) (s-3) 2: ————— s (s-1) From input 2 to output… 2 (s-2) (s-3) (s-6) 1: ——————- (s-5) (s-4) 2 (s-4) (s-7) 2: ————- (s-1) (s-6) Continuous-time zero/pole/gain model. 小结至此，利用matlab，我们学会了用tf,zpk描述模型。下一部分我将要学到利用matlab去描述状态空间模型。]]></content>
      <categories>
        <category>Matlab simulation</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[use arrays to describe MIMO system]]></title>
    <url>%2Fblog%2Fundefined%2Fuse-arrays-to-describe-MIMO-system%2F</url>
    <content type="text"><![CDATA[cell arrayszaehlerpolynome := NUMnennerpolynome := DEN$$ NUM = \begin{pmatrix} n_{11} &amp; n_{12} \\ n_{21} &amp; n_{22} \end{pmatrix} $$$$ DEN = \begin{pmatrix} d_{11} &amp; d_{12} \\ d_{21} &amp; d{22} \end{pmatrix} $$In Matlab geben wir die Vektoren mit den Koeffizienten von s in absteigende Reihenfolge von s ein. IN matlab NUM = {[2 -3] [1 1 -6];[1 2] 1}DEN = {[1 1] [1 5];[1 5 4] [2 6 10]}Und dann koennen wir noch ein mal tf Befehl benutzen.G(s) = tf(NUM,DEN); System nur mit Verstaerkungdas bedeutet output / input = constantzB.$$ G_1(s) = 3/1 $$$$ G_2(s) = 0/2 $$in matlab wir koennen eingeben G = tf{[1 2;3 0]}; %1 2 sind input,3 0 sind ouptput.]]></content>
      <categories>
        <category>Matlab simulation</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Modellierung linearer Zeitinvarianter Systeme]]></title>
    <url>%2Fblog%2Fundefined%2FModellierung-linearer-Zeitinvarianter-Systeme%2F</url>
    <content type="text"><![CDATA[LTI-Modelle Zu Beginn wir machen die mathematische , systembeschreibung, die die Zusammenhaenge zwischen den Eingaengen u und den Ausgaengen y beschreibt. Matlabtellt nun fuer zeitkontinuierlicheund -diskrete lineare zeitinvariante systeme(LTI-system) die folgenden vier Darstellungsarten zur Verfuegung:1.transfer function2.zero-pole-gain ZPK3.state-space4.frequency response data UebertragungsfunktionEine Uebertragungsfunktion ist mit dem Zaehlerpolynom und dem Nennerpolynom,und beschreibt das Uebertragungsverhalten eines Systems im Laplace-Breich.$ h(s)=\frac{num(s)}{den(s)}=\frac{a_ms^m+a_{m-1}s^{m-1}+ \dots +a_1 s+a_0}{b_n s^n+b_{n-1} s^{n-1}+ \dots +b_1 s+b_0} $ Erstellen von TF-SISO-Modellen1.Befehl:tf(num,den) ZB.transfor function$ \frac{4s-2}{s-3} $in matlab:G(s)=tf([4 -2],[1 -3]) ZB.rationale function in sEs wird zuerst die Variable s als TF-modell definiert s = tf(‘s’)G(s) =(4*s-2)/(s-3) ZB.MIMO TF$ G(s)=\begin{bmatrix} g_{11} &amp; g_{12} \\ g_{21} &amp; g_{22} \ \end{bmatrix} $ $ g_{11}=\frac{2s-3}{s+1} $$ g_{12}=\frac{s^2+s-6}{s+5} $$ g_{21}=\frac{s+2}{s+4} $$ g_{22}=\frac{-1}{2s^2+6s+10} $ in matlabg11 = tf([2 -3],[1 1]);g12 = tf([1 1 -6],[1 5]);g21 = tf([1 2],[1 4]);g22 = tf([-1],[2 6 10]);Zusammenfuegen zur Matrix G:G = [g11 g12;g21 g22];]]></content>
      <categories>
        <category>Matlab simulation</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[SPE NOTE 1 By Shawn]]></title>
    <url>%2Fblog%2FSPE%2FSPE-NOTE-1-By-Shawn%2F</url>
    <content type="text"><![CDATA[This is written by Shawn. My classmate Cui.]]></content>
      <categories>
        <category>SPE</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Kalman Filter]]></title>
    <url>%2Fblog%2FSPE%2FKalman-Filter%2F</url>
    <content type="text"><![CDATA[Why use kalman filters? State Observers Optimal state Estimator Optimal State Estimator Algorithm Nonlinear State Estimators How to usr a Kalman Filter in Simulink Use an Extended Kalan filter in simuling]]></content>
      <categories>
        <category>SPE</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[steuerung und regelung]]></title>
    <url>%2Fblog%2Fundefined%2Fsteuerung-und-regelung%2F</url>
    <content type="text"><![CDATA[Der “kleine” Unterschied:Steuerung und Regelungohne Regler spricht man von einer Steuerung.Toleranzen und Stoergroessen werden nicht ausgelichen.]]></content>
      <categories>
        <category>Regelung</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[list and tuple]]></title>
    <url>%2Fblog%2Fpython%2Flist-and-tuple%2F</url>
    <content type="text"><![CDATA[list 数据类型python的一种数据类型是列表：list它是一个有序的集合，可以随时添加和删除其中的元素。比如：列出自己的课程，就可以用list表示： >>> vorlesungen = [‘math’,’SPE’,’FDI’] 变量vorlesungen就是一个list,用len()函数可以获得list函数的个数： >>> len(vorlesungen)>>> 3 用索引可以访问list中的每一个位置的元素，记得索引是从0开始的： >>> vorlesungen[0]>>> ‘math’ list添加无素*.append()命令可以添加元素，在列数最末尾追加。 >>> vorlesungen.append(‘mehrg’) .insert(i,’*‘)可以在任意位置添加元素。 >>> vorlesungen.insert(2,’pr’) 要删除list末尾的元素，用pop()命令 >>> vorlesungen.pop() 要删除指定的位置元素，用pop()的方法，其中i是索引位置。 >>> vorlesungen.pop(i) 可以用len()命令计算元数个数。 >>> len(vorlesungen) tuple 数据类型 >>> vorl=(‘a’,’b’,’c’) 注意：如果定义一个1个元素的tuple，需要加入逗号 >>> t=(1,) tuple的元素不能更改。]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[第一个python程序]]></title>
    <url>%2Fblog%2Fpython%2F%E7%AC%AC%E4%B8%80%E4%B8%AApython%E7%A8%8B%E5%BA%8F%2F</url>
    <content type="text"><![CDATA[python交互模式在命令行模式下敲python3（我使用的是python3),进入到python交互模式，提示符为&gt;&gt;&gt;在python交互模式下输入exit()回车，退回到命令行模式。 打印出指定的文字让python打印出打定的文字，可以使用print()函数，然后把希望打印的文字用单引号或双引号括起来。 >>>print(‘hello,zhongcheng’)hello,zhongcheng这种用单引号或者双引号括起来的文本在程序中叫字符串。最后用exit()，这就是第一个python。 文本编辑用文本编辑.py文件，可以用python3 *.py执行此文件。这是我的第一个python程序。]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[SPE_note1]]></title>
    <url>%2Fblog%2FSPE%2FSPE-note1%2F</url>
    <content type="text"><![CDATA[]]></content>
      <categories>
        <category>SPE</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[video for linear algebra]]></title>
    <url>%2Fblog%2Flinear_algebra%2Fvideo-linear-algebra%2F</url>
    <content type="text"><![CDATA[]]></content>
      <categories>
        <category>linear algebra</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[SPE_note2]]></title>
    <url>%2Fblog%2FSPE%2FSPE-note2%2F</url>
    <content type="text"><![CDATA[]]></content>
      <categories>
        <category>SPE</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[request package]]></title>
    <url>%2Fblog%2Fundefined%2Frequest-package%2F</url>
    <content type="text"><![CDATA[request packagen install1234567pip install requestsimport requestsprint(os.getcwd())r = requests.get(&quot;http://www.baidu.com&quot;)print(r,url)print(r,encoding) print(r,text)]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[SPE]]></title>
    <url>%2Fblog%2Fstudy%2FSPE%2F</url>
    <content type="text"><![CDATA[$x^2+y^2=c^2$$ \hat{a} \int_{i=0}^{n} $]]></content>
      <categories>
        <category>SPE</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[pflicht module und wahlpflicht module]]></title>
    <url>%2Fblog%2Fstudy%2Fpflicht-module-und-wahlpflicht-module%2F</url>
    <content type="text"><![CDATA[pflicht module1000 Pflichtmodule1010 Mathematik E41020 Numerical Mathematics 1030 Theorie statistischer Signale1040 State and Parameter Estimation1050 Nonlinear Control Systems 1060 Moderne Regelungstechnik1070 Robust Control1080 Prozessautomatisierung 1090 Kognitive technische Systeme1100 Fehlerdiagnose und Fehlertoleranz in technischen Systemen 1110 Strömungslehre 21120 Modelling and Simulation of Dynamic Systems1130 Distributed Systems1140 Real-Time Systems wapflicht module40153 Thermodynamik und Kraftwerktechnik40223 Fahrzeugtechnik41128 Advanced System and Control Theory41170 Test und Zuverlässigkeit digitaler Systeme41253 Power System Operation and Control41257 Operationsverstärker Praktikum50009 Computer/Robot Vision50011 Kognitive Robotersysteme50055 Algorithmische Numerik]]></content>
      <categories>
        <category>lecture</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Dynamik und Stabilitaetsuntersuchung]]></title>
    <url>%2Fblog%2Fcontrol%2FMehrgroessenreglung%2F</url>
    <content type="text"><![CDATA[Gegenstand der Betrachtung:$ \dot{\underline{x}}=\underline{Ax}(t)+\underline{Bu}(t) \in{R}^N $loesung:$ \underline{x}(t)=\underline{e}^{A(t-{t_0})}\underline{x}(t_0)+\int_{t_0}^{t}\underline{e}^{A(t-\tau)}\underline{Bu}(\tau)d\tau $Definition und Eigenschaft der Matrizen-e Funktion]]></content>
      <categories>
        <category>Control</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Basic concepts of fault diagnosis technique]]></title>
    <url>%2Fblog%2Fundefined%2FBasic-concepts-of-fault-diagnosis-technique%2F</url>
    <content type="text"><![CDATA[Three essential tasks: fault detection fault isolation fault analysis or identificationBasic ideas, major issues and tools in the observer-based FDI framework on the observer-based residual generator framework unknown input decoupling and fault isolation issues robustness issues in the observer-based FDI framework on the parity space FDI framework residual evaluation and threshold computation FDI system synthesis and design]]></content>
      <categories>
        <category>FDI</category>
      </categories>
  </entry>
</search>
